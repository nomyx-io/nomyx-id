{
  "address": "0xF2569987c3b3a4ac90f3CC2630C0A753915D996d",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "claimTopic",
          "type": "uint256"
        }
      ],
      "name": "ClaimTopicAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "claimTopic",
          "type": "uint256"
        }
      ],
      "name": "ClaimTopicRemoved",
      "type": "event"
    }
  ],
  "transactionHash": "0xd7c80dd0ab9f618e793f30afeceb1ae2d831abd29ca11e8cbb5eb1a0017f85d2",
  "receipt": {
    "to": null,
    "from": "0x3AAF0e6023A2745FB62052c1954260559fFF4947",
    "contractAddress": "0xF2569987c3b3a4ac90f3CC2630C0A753915D996d",
    "transactionIndex": 16,
    "gasUsed": "72227",
    "logsBloom": "0x
    "blockHash": "0x42ed3e93ec8e38898bb3d0334028396df0300a69f1e32fe9948063e1b18f2fc9",
    "transactionHash": "0xd7c80dd0ab9f618e793f30afeceb1ae2d831abd29ca11e8cbb5eb1a0017f85d2",
    "logs": [],
    "blockNumber": 3879432,
    "cumulativeGasUsed": "2746783",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "56ef7d1bb9dfe6d25681ba8cd014b15b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"}],\"name\":\"ClaimTopicAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"}],\"name\":\"ClaimTopicRemoved\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/libraries/ClaimTopicLib.sol\":\"ClaimTopicLib\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"src/interfaces/IClaimTopicsRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IClaimTopicsRegistry {\\n\\n    // events\\n    event ClaimTopicAdded(uint256 indexed claimTopic);\\n    event ClaimTopicRemoved(uint256 indexed claimTopic);\\n\\n    // functions\\n    // setters\\n    function addClaimTopic(uint256 _claimTopic) external;\\n    function removeClaimTopic(uint256 _claimTopic) external;\\n\\n    // getter\\n    function getClaimTopics() external view returns (uint256[] memory);\\n\\n}\",\"keccak256\":\"0xf1de8ce4a353e0fe1bf698d8063629b0a34202196a148845ccb57b446751e2b9\",\"license\":\"MIT\"},\"src/libraries/ClaimTopicLib.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"../interfaces/IClaimTopicsRegistry.sol\\\";\\n\\nstruct ClaimTopicContract {\\n    uint256[] claimTopics;\\n    mapping(uint256 => bool) claimTopicIndex;\\n}\\n\\nstruct ClaimTopicStorage {\\n    ClaimTopicContract _contract;\\n    address owner;\\n}\\n\\nlibrary ClaimTopicLib {\\n\\n    event ClaimTopicAdded(uint256 indexed claimTopic);\\n    event ClaimTopicRemoved(uint256 indexed claimTopic);\\n\\n    bytes32 internal constant DIAMOND_STORAGE_POSITION = \\n        keccak256(\\\"diamond.standard.claimTopics.facet.contract\\\");\\n\\n    function claimTopicStorage() internal pure returns (ClaimTopicStorage storage ds) {\\n        bytes32 position = DIAMOND_STORAGE_POSITION;\\n        assembly {\\n            ds.slot := position\\n        }\\n    }\\n\\n    function addClaimTopic(\\n        ClaimTopicContract storage self,\\n        uint256 _claimTopic\\n    ) internal {\\n        self.claimTopics.push(_claimTopic);\\n        self.claimTopicIndex[_claimTopic] = true;\\n        emit ClaimTopicAdded(_claimTopic);\\n    }\\n\\n    function removeClaimTopic(\\n        ClaimTopicContract storage self,\\n        uint256 _claimTopic\\n    ) internal {\\n        for (uint256 i; i < self.claimTopics.length; i++) {\\n            if (self.claimTopics[i] == _claimTopic) {\\n                self.claimTopics[i] = self.claimTopics[self.claimTopics.length - 1];\\n                self.claimTopics.pop();\\n                emit ClaimTopicRemoved(_claimTopic);\\n                return;\\n            }\\n        }\\n        self.claimTopicIndex[_claimTopic] = false;\\n        revert(\\\"Claim topic not found.\\\");\\n    }\\n\\n    function getClaimTopics(ClaimTopicContract storage self) internal view returns (uint256[] memory) {\\n        return self.claimTopics;\\n    }\\n\\n    function hasClaimTopic(ClaimTopicContract storage self, uint256 _claimTopic) internal view returns (bool) {\\n        return self.claimTopicIndex[_claimTopic];\\n    }\\n}\\n\",\"keccak256\":\"0x6f3e1a64efa755d36beac63ca575718c51ccea575c0e4e46127dae85e368a48a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207961d3bb51256c7c8e20acc6b1b7158673ccc81e3fe3fd1fc7fb4534cb35e93564736f6c63430008110033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207961d3bb51256c7c8e20acc6b1b7158673ccc81e3fe3fd1fc7fb4534cb35e93564736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}